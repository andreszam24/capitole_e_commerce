openapi: 3.0.0
info:
  title: API de Tarifa
  version: 1.0.0
  description: API para consultar la tarifa aplicable según marca, producto y fecha.
tags:
  - name: CapitoleAPI
    description: "Endpoints relacionados con el proyecto prueba técnica"
paths:
  /rate:
    get:
      tags:
        - RateAPI
      summary: "Consulta de tarifa"
      description: "Devuelve la tarifa aplicable según brandId, productId y applicationDate"
      parameters:
        - in: query
          name: brandId
          description: "Identificador de la marca. Use 6 para pruebas"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: productId
          description: "Identificador del producto. Use 0 para pruebas"
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: applicationDate
          description: "Fecha en formato ISO 8601 de búsqueda de tarifa. Use 2020-06-14T18:00:00 para pruebas"
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponse'
        '200':
          description: Respuesta exitosa
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindRateResponse'

components:
  schemas:
    FindRateResponse:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          example: 0
        brandId:
          type: integer
          format: int64
          example: 6
        priceList:
          type: integer
          example: 1
        startDate:
          type: string
          format: date-time
          example: "2020-06-14T16:00:00Z"
        endDate:
          type: string
          format: date-time
          example: "2020-06-15T16:00:00Z"
        price:
          type: string
          example: "35.52 EUR"
      required:
        - productId
        - brandId
        - priceList
        - startDate
        - endDate
        - price

    BadRequestResponse:
      type: object
      properties:
        status:
          type: integer
          example: 400
        message:
          type: string
          example: "Bad Request"
        timestamp:
          type: string
          format: date-time
          example: "2025-03-11T12:00:00Z"
        path:
          type: string
          example: "/rate"

    NotFoundResponse:
        type: object
        properties:
          status:
            type: integer
            example: 404
          message:
            type: string
            example: "Resource not found"
          timestamp:
            type: string
            format: date-time
            example: "2025-03-11T12:00:00Z"
          path:
            type: string
            example: "/rate"

    InternalServerErrorResponse:
      type: object
      properties:
        status:
          type: integer
          example: 500
        message:
          type: string
          example: "Estamos presentando inconvenientes, por favor intenta más tarde. Disculpa las molestias."
        timestamp:
          type: string
          format: date-time
          example: "2025-03-11T12:00:00Z"
        path:
          type: string
          example: "/rate"
